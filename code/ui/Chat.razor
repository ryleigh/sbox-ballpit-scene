@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent

<root>
	<div class="input">
		<TextEntry @ref="InputBox" onsubmit="@ChatFinished"></TextEntry>
	</div>
</root>

@code
{
	TextEntry InputBox;

	protected override void OnUpdate()
	{
		if (InputBox is null || IsProxy)
			return;

		Panel.AcceptsFocus = false;

		if ( Input.Pressed( "Chat" ) )
		{
			InputBox.Focus();
		}

		SetClass( "open", InputBox.HasFocus );

		if(InputBox.HasFocus)
		{
			// Log.Info($"{InputBox.TextLength}");
		}

		var x = GameObject.Transform.Parent.Transform.Position.x;
		if(x < -245f)
			GameObject.Transform.LocalPosition = GameObject.Transform.LocalPosition.WithX(Utils.Map(x, -245f, -256f, 0f, 15f));
		else if(x > 245f)
			GameObject.Transform.LocalPosition = GameObject.Transform.LocalPosition.WithX(Utils.Map(x, 245f, 256f, 0f, -15f));
		else
			GameObject.Transform.LocalPosition = GameObject.Transform.LocalPosition.WithX(0f);

		var y = GameObject.Transform.Parent.Transform.Position.y;
		if(y < -120f)
			GameObject.Transform.LocalPosition = GameObject.Transform.LocalPosition.WithY(Utils.Map(y, -120f, -141f, -20f, 0f));
		else if(y > 120f)
			GameObject.Transform.LocalPosition = GameObject.Transform.LocalPosition.WithY(Utils.Map(y, 120f, 141f, 20f, 0f));
		else
			GameObject.Transform.LocalPosition = GameObject.Transform.LocalPosition.WithY(-20f);
	}

	void ChatFinished()
	{
		var text = InputBox.Text;
		InputBox.Text = "";

		if (string.IsNullOrWhiteSpace(text))
			return;

		// Log.Info($"{text}");
		// AddText( text );
		var chatOutput = GameObject.Parent.Components.GetInDescendants<ChatOutput>();
		chatOutput.AddText(text);
	}

	/// <summary>
	/// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
	/// </summary>
	protected override int BuildHash()
	{
		if (InputBox is null)
			return 0;

		return System.HashCode.Combine(InputBox.HasFocus, InputBox.Text);
	}
}
