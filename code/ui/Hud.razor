@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent

<root>
	<div class="pointer"></div>

	<var class="round_display" style="opacity:@(Manager.Instance.GamePhase == GamePhase.RoundActive ? 1f : 0.3f);">@($"Round {Manager.Instance.RoundNum + 1}")</var>

	@if(Manager.Instance.DoesPlayerExist0)
	{
		var player0 = Manager.Instance.GetPlayer(0);

		<div class="bottom_row" style="left: 100px; bottom: 45px; flex-direction: row;">
			<div class="player_name" style="color: #0000aa;">@($"{Manager.Instance.GetConnection(0).DisplayName} 🏆{player0.Score} 💲{player0.Money}")</div>
		</div>

		<div class="bottom_row" style="left: 100px; bottom: 10px; flex-direction: row;">
			@for(int i = 0; i < player0.MaxHP; i++)
			{
				<div class="player_hp" style="opacity:@(player0.HP > i ? 1f : 0.15f);">@(player0.HP > i ? "❤️" : "🖤")</div>
			}
		</div>
	}
	
	@if(Manager.Instance.DoesPlayerExist1)
	{
		var player1 = Manager.Instance.GetPlayer(1);

		<div class="bottom_row" style="right: 100px; bottom: 45px; flex-direction: row-reverse;">
			<div class="player_name" style="color: #007700;">@($"{Manager.Instance.GetConnection(1).DisplayName} 🏆{player1.Score} 💲{player1.Money}")</div>
		</div>

		<div class="bottom_row" style="right: 100px; bottom: 10px; flex-direction: row-reverse;">
			@for(int i = 0; i < player1.MaxHP; i++)
			{
				<div class="player_hp" style="opacity:@(player1.HP > i ? 1f : 0.15f);">@(player1.HP > i ? "❤️" : "🖤")</div>
			}
		</div>
	}
</root>

@code
{
	public static Hud Instance { get; private set; }

	public int HashNum { get; set; } = 0;

	protected override void OnAwake()
	{
		base.OnAwake();

		Instance = this;
	}

	protected override int BuildHash()
	{
		var manager = Manager.Instance;
		var player0 = manager.GetPlayer(0);
		var player1 = manager.GetPlayer(1);
		var playerName0 = manager.GetConnection(0)?.DisplayName ?? "";
		var playerName1 = manager.GetConnection(1)?.DisplayName ?? "";
		var hp0 = player0?.HP ?? 0;
		var hp1 = player1?.HP ?? 0;
		var score0 = player0?.Score ?? 0;
		var score1 = player1?.Score ?? 0;

		return HashCode.Combine(playerName0, playerName1, hp0, hp1, score0, score1, manager.RoundNum);
	}
}
