@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent

<root>
	@{
		var itemNum = 0;
	}

	@foreach(var shopItem in Scene.GetAllComponents<ShopItem>())
	{
		var pos = shopItem.Transform.Position;
		var screenPos = Scene.Camera.PointToScreenPixels(pos) * Panel.ScaleFromScreen;
		var upgradeType = shopItem.UpgradeType;
		var rarity = Manager.Instance.GetRarityForUpgrade(upgradeType);
		var isPassive = Manager.Instance.IsUpgradePassive(upgradeType);

		var player = Manager.Instance.GetPlayer(shopItem.PlayerNum);
		var money = player?.Money ?? 0;
		var maxLevel = Manager.Instance.GetMaxLevelForUpgrade(upgradeType);
		var playerLevel = player?.GetUpgradeLevel(upgradeType) ?? 0;

		var timingOffset = 0f;
		var bobSpeed = 2.75f;
		var yOffset = Utils.FastSin(timingOffset + Time.Now * bobSpeed) * 3.5f;
		var shadowDistance = 9f + Utils.FastSin(timingOffset + Time.Now * bobSpeed) * 3f;
		var shadowBlur = 2.3f + Utils.FastSin(timingOffset + Time.Now * bobSpeed) * 1.2f;
		var shadowOpacity = 0.85f - Utils.FastSin(timingOffset + Time.Now * bobSpeed) * 0.15f;

		<div class="icon @(isPassive ? "passive_icon" : "")" style="left: @(screenPos.x - 50)px; top: @(screenPos.y - 50 - yOffset)px; opacity:@((money >= shopItem.Price && playerLevel < maxLevel ? 1f : 0.4f)); text-stroke: @(Manager.GetOutlineSizeForRarity(rarity))px @(Manager.GetColorForRarity(rarity).Rgba);
		text-shadow: @(-shadowDistance)px @(shadowDistance)px @(shadowBlur)px @(Color.Black.WithAlpha(shadowOpacity).Rgba);">
			@(Manager.Instance.GetIconForUpgrade(upgradeType))
		</div>

		<div class="price" style="left: @(screenPos.x - 60)px; top: @(screenPos.y - 44 + Utils.FastSin(itemNum + shopItem.PlayerNum + Time.Now * 3f) * 3.5f)px; color: @((money >= shopItem.Price ? new Color(0.8f, 0.8f, 0f) : new Color(1f, 0.2f, 0.2f)).Rgba);">
			@($"${shopItem.Price}")
		</div>

		@if(shopItem.NumLevels > 1)
		{
			<div class="level" style="left: @(screenPos.x + 5)px; top: @(screenPos.y - 40 - yOffset)px; opacity:@((money >= shopItem.Price && playerLevel < maxLevel ? 1f : 0.4f));">@($"{shopItem.NumLevels}")</div>
		}

		itemNum++;
	}

	@foreach(var rerollButton in Scene.GetAllComponents<RerollButton>()) 
	{
		var pos = rerollButton.Transform.Position;
		var screenPos = Scene.Camera.PointToScreenPixels(pos) * Panel.ScaleFromScreen;

		var player = Manager.Instance.GetPlayer(rerollButton.PlayerNum);
		if(player != null) 
		{
			var canAfford = player.Money >= player.CurrRerollPrice;

			<div class="reroll" style="left: @(screenPos.x - 58)px; top: @(screenPos.y - 20)px; opacity:@(canAfford ? 1f : 0.6f); color: @((canAfford ? Color.White : new Color(0.4f, 0f, 0f)).Rgba);">Reroll</div>
			<div class="price" style="left: @(screenPos.x - 72)px; top: @(screenPos.y - 46 + Utils.FastSin(0.75f + rerollButton.PlayerNum + Time.Now * 3f) * 3.5f)px; color: @((canAfford ? new Color(0.8f, 0.8f, 0f) : new Color(1f, 0.3f, 0.3f)).Rgba);">@($"${player.CurrRerollPrice}")</div>
		}
	}

	@foreach(var skipButton in Scene.GetAllComponents<SkipButton>())
	{
		var pos = skipButton.Transform.Position;
		var screenPos = Scene.Camera.PointToScreenPixels(pos) * Panel.ScaleFromScreen;

		<div class="skip" style="left: @(screenPos.x - 60)px; top: @(screenPos.y - 20)px; color:@((skipButton.FlashToggle ? new Color(0.6f, 0.6f, 0f) : new Color(1f, 1f, 1f)).Rgba);">Skip</div>
	}
</root>

@code
{
	protected override int BuildHash() 
	{
		var numItems = 0;
		numItems += Scene.GetAllComponents<ShopItem>().Count();
		numItems += Scene.GetAllComponents<RerollButton>().Count();
		numItems += Scene.GetAllComponents<SkipButton>().Count();

		return System.HashCode.Combine(numItems > 0 ? Time.Now : 0f);
	}
}
