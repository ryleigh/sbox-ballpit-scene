@using Sandbox;
@using Sandbox.UI;
@inherits Panel
@attribute [StyleSheet("PlayerBar.razor.scss")]

<root>
	@{
		var playerNum = Player.PlayerNum;
		var moneySize = Utils.Map(RealTime.Now - Player.MoneyChangedTime, 0f, 0.33f, 35f, 30f, EasingType.BounceOut);
		var hpSize = Utils.Map(RealTime.Now - Player.HpChangedTime, 0f, 0.33f, 35f, 28f, EasingType.BounceOut);
		var hpAlign = playerNum == 0 ? "left: 100px;" : "right: 100px;";
	}

	<div style="flex-direction: @(playerNum == 0 ? "row" : "row-reverse"); gap: 6px;">
		<div class="avatar" style="background-image: url( avatar:@Connection.SteamId )"></div>
		<div class="name" style="color: @((playerNum == 0 ? Manager.Player0NameColor : Manager.Player1NameColor).Rgba);">@($"{Connection.DisplayName}")</div>
	</div>

	<div class="lower_row" style="flex-direction: @(playerNum == 0 ? "row" : "row-reverse");">
		<div style="flex-direction: row; gap: 2px; font-size: @(moneySize)px;">
			<div class="money_icon">@($"$")</div>
			<div class="money">@($"{Player.Money}")</div>
		</div>

		<div class="hp_container" style="flex-direction: @(playerNum == 0 ? "row" : "row-reverse"); @hpAlign">
			@for(int i = 0; i < Player.MaxHP; i++)
			{
				<div class="hp" style="opacity:@(Player.HP > i ? 1f : 0.15f); font-size: @(hpSize)px;">@(Player.HP > i ? "❤️" : "🖤")</div>
			}
		</div>
	</div>
</root>

@code
{
	public Connection Connection { get; set; }
	public PlayerController Player { get; set; }
	// public bool IsShopItem { get; set; }

	protected override int BuildHash()
	{
		if (Player == null || Connection == null)
			return 0;

		var moneySize = Utils.Map(RealTime.Now - Player.MoneyChangedTime, 0f, 0.4f, 36f, 30f, EasingType.BounceOut);
		var hpSize = Utils.Map(RealTime.Now - Player.HpChangedTime, 0f, 0.33f, 35f, 28f, EasingType.BounceOut);
		return System.HashCode.Combine(Player.HP, Player.Money, Connection.DisplayName, Player.PlayerNum, moneySize, hpSize);
	}
}
