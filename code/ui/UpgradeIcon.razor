@using Sandbox;
@using Sandbox.UI;
@inherits Panel
@attribute [StyleSheet( "UpgradeIcon.razor.scss" )]

<root>
	@{
		var player = Manager.Instance.GetPlayer(PlayerNum);
	}

	 @if(player == null) {
		return;
	}

	<!-- <div class="bg" style="background-image: url(@($"materials/icons/{Globals.GetIconForUpgrade(UpgradeType)}.png"));"></div> -->
	<div class="icon" style="opacity:@((Manager.Instance.HoveredUpgradeType == UpgradeType ? 1f : 0.9f) * (player.SelectedUpgradeType == UpgradeType ? 1f : 0.6f) );
						text-stroke: 12px @(Manager.GetColorForRarity(Manager.Instance.GetRarityForUpgrade(UpgradeType)).Rgba)">
		@(Manager.Instance.GetIconForUpgrade(UpgradeType))
	</div>

	@if(Level > 1)
	{
		<div class="level" style="opacity:@((Manager.Instance.HoveredUpgradeType == UpgradeType ? 1f : 0.9f) * (player.SelectedUpgradeType == UpgradeType ? 1f : 0.3f) );">@($"{Level}")</div>
	}
</root>

@code
{
	public UpgradeType UpgradeType { get; set; }
	public int Level { get; set; }
	public int PlayerNum { get; set; }

	protected override int BuildHash() 
	{
		var player = Manager.Instance.GetPlayer(PlayerNum);
		var isHovered = Manager.Instance.HoveredUpgradeType == UpgradeType;
		var isSelected = (player?.SelectedUpgradeType ?? UpgradeType.None) == UpgradeType;
		return System.HashCode.Combine(UpgradeType, Level, isHovered, isSelected);
	}

	protected override void OnMouseOver(MousePanelEvent e)
	{
		Manager.Instance.HoveredUpgradeType = UpgradeType;
		// Manager.Instance.HoveredUpgradePos = new Vector2(Position.x, Position.y);
	}

	protected override void OnMouseOut(MousePanelEvent e)
	{
		Manager.Instance.HoveredUpgradeType = UpgradeType.None;
	}

	protected override void OnMouseDown(MousePanelEvent e)
	{
		var localPlayer = Manager.Instance.GetLocalPlayer();
		if( PlayerNum != localPlayer.PlayerNum )
			return;

		if (e.MouseButton == MouseButtons.Left)
			localPlayer.SelectedUpgradeType = UpgradeType;
		else if (e.MouseButton == MouseButtons.Right)
			localPlayer.TryUseItem(UpgradeType);
	}
}
