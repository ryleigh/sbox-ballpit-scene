@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent

<root>
	@foreach(var pickupItem in Scene.GetAllComponents<PickupItem>())
	{
		var pos = pickupItem.Transform.Position;
		var screenPos = Scene.Camera.PointToScreenPixels(pos) * Panel.ScaleFromScreen;
		var rarity = Manager.Instance.GetRarityForUpgrade(pickupItem.UpgradeType);

		<div class="icon" style="left: @(screenPos.x - 40)px; top: @(screenPos.y - 40 - pickupItem.IconOffset.y)px; opacity: @(pickupItem.Opacity); text-stroke: @(Manager.GetOutlineSizeForRarity(rarity))px @(Manager.GetColorForRarity(rarity).Rgba);
			text-shadow: @(-pickupItem.ShadowDistance)px @(pickupItem.ShadowDistance)px @(pickupItem.ShadowBlur)px @(Color.Black.WithAlpha(pickupItem.ShadowOpacity).Rgba);">
			@(Manager.Instance.GetIconForUpgrade(pickupItem.UpgradeType))
		</div>

		@if(pickupItem.NumLevels > 1)
		{
			<div class="level" style="left: @(screenPos.x + 5)px; top: @(screenPos.y - 40 - pickupItem.IconOffset.y)px; opacity: @(pickupItem.Opacity);">@($"{pickupItem.NumLevels}")</div>
		}
	}

	@foreach(var moneyPickup in Scene.GetAllComponents<MoneyPickup>()) 
	{
		var pos = moneyPickup.Transform.Position;
		var screenPos = Scene.Camera.PointToScreenPixels(pos) * Panel.ScaleFromScreen;

		<div class="icon" style="left: @(screenPos.x - 40)px; top: @(screenPos.y - 40 - moneyPickup.IconOffset.y)px; opacity: @(moneyPickup.Opacity); 
			text-shadow: @(-moneyPickup.ShadowDistance)px @(moneyPickup.ShadowDistance)px @(moneyPickup.ShadowBlur)px @(Color.Black.WithAlpha(moneyPickup.ShadowOpacity).Rgba);">@(moneyPickup.IsFlying ? "💸" : "💵")</div>

		@if(moneyPickup.NumLevels > 1)
		{
			<div class="level" style="left: @(screenPos.x + 0)px; top: @(screenPos.y - 40 - moneyPickup.IconOffset.y)px; opacity: @(moneyPickup.Opacity);">@($"{moneyPickup.NumLevels}")</div>
		}
	}
</root>

@code
{
	// protected override void OnUpdate()
	// {
		
	// }

	protected override int BuildHash() 
	{
		var numPickups = 0;
		numPickups += Scene.GetAllComponents<PickupItem>().Count();
		numPickups += Scene.GetAllComponents<MoneyPickup>().Count();

		return System.HashCode.Combine(numPickups > 0 ? Time.Now : 0f);
	}
}
